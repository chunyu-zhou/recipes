// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service_protocol.proto

package service_protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StringMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMessage) Reset()         { *m = StringMessage{} }
func (m *StringMessage) String() string { return proto.CompactTextString(m) }
func (*StringMessage) ProtoMessage()    {}
func (*StringMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_protocol_b44ed669302d62ae, []int{0}
}
func (m *StringMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMessage.Unmarshal(m, b)
}
func (m *StringMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMessage.Marshal(b, m, deterministic)
}
func (dst *StringMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMessage.Merge(dst, src)
}
func (m *StringMessage) XXX_Size() int {
	return xxx_messageInfo_StringMessage.Size(m)
}
func (m *StringMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StringMessage proto.InternalMessageInfo

func (m *StringMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*StringMessage)(nil), "service_protocol.StringMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceAClient is the client API for ServiceA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceAClient interface {
	Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error)
}

type serviceAClient struct {
	cc *grpc.ClientConn
}

func NewServiceAClient(cc *grpc.ClientConn) ServiceAClient {
	return &serviceAClient{cc}
}

func (c *serviceAClient) Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/service_protocol.ServiceA/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceAServer is the server API for ServiceA service.
type ServiceAServer interface {
	Echo(context.Context, *StringMessage) (*StringMessage, error)
}

func RegisterServiceAServer(s *grpc.Server, srv ServiceAServer) {
	s.RegisterService(&_ServiceA_serviceDesc, srv)
}

func _ServiceA_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service_protocol.ServiceA/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAServer).Echo(ctx, req.(*StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service_protocol.ServiceA",
	HandlerType: (*ServiceAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _ServiceA_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_protocol.proto",
}

func init() {
	proto.RegisterFile("service_protocol.proto", fileDescriptor_service_protocol_b44ed669302d62ae)
}

var fileDescriptor_service_protocol_b44ed669302d62ae = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x8d, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x03, 0x33, 0x84,
	0x04, 0xd0, 0xc5, 0xa5, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5,
	0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xea, 0x95, 0x54, 0xb9,
	0x78, 0x83, 0x4b, 0x8a, 0x32, 0xf3, 0xd2, 0x7d, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x85, 0x44,
	0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c,
	0xa3, 0x42, 0x2e, 0x8e, 0x60, 0x88, 0xc1, 0x8e, 0x42, 0xa9, 0x5c, 0x2c, 0xae, 0xc9, 0x19, 0xf9,
	0x42, 0xf2, 0x7a, 0x18, 0x6e, 0x40, 0x31, 0x4a, 0x8a, 0x90, 0x02, 0x25, 0xe9, 0xa6, 0xcb, 0x4f,
	0x26, 0x33, 0x89, 0x2a, 0x09, 0xe8, 0x97, 0x19, 0xea, 0xa7, 0x56, 0x24, 0xe6, 0x16, 0xe4, 0xa4,
	0xea, 0xa7, 0x26, 0x67, 0xe4, 0x5b, 0x31, 0x6a, 0x25, 0xb1, 0x81, 0x35, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x1a, 0xe3, 0x2b, 0x12, 0xea, 0x00, 0x00, 0x00,
}
